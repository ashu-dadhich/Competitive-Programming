(function(){var e=function(){Ember.$.getScript("/sites/all/modules/codechef_todo/js/todo_notification.js").done(function(){$("body").find(".todo-widget").find("input").click(function(e){var s=e.target;problemCode=$(this).attr("problem");contestCode=$(this).attr("contest");var i=function(e){if(typeof $.growl==="function"){$.growl({title:"Success",message:e.message})}else{$($(s).next(".todo-button-message")[0]).html(e.message)}$(s).prop("src","/sites/all/themes/abessive/images/add2.png");$(s).prop("title","Problem already present in Todo list");var t=a(contestCode);var i=window.sessionStorage;var r=JSON.parse(i.getItem(t));r.data.todos[problemCode]=true;r=JSON.stringify(r);i.removeItem(t);i.setItem(t,r);incrementNotifCouter()};var r=function(e){var t=JSON.parse(e.responseText);if(typeof $.growl==="function"){$.growl({title:"Error",message:t.message})}else{$($(s).next(".todo-button-message")[0]).html(t.message)}};t({type:"POST",url:"/api/todo/add",data:{pcode:problemCode,ccode:contestCode},success:i,error:r})});$("div#problems-list tr").hover(function(){$(".todo-widget").css("visibility","hidden");var e=$(this).find("td")[0];$(e).find(".todo-widget").css("visibility","visible")})})};var t=function(e){return $.ajax({dataType:e["dataType"]?e["dataType"]:"JSON",url:e["url"],type:e["type"]?e["type"]:"GET",data:e["data"],retryCount:e["retryCount"]?e["retryCount"]:0,retryLimit:10,success:function(t){if(typeof e["success"]=="function"){e["success"](t)}},error:function(s){if(s.status>500&&this.retryCount<this.retryLimit){e["retryCount"]=e["retryCount"]?e["retryCount"]+1:1;setTimeout(function(){t(e)},2e3)}else{if(typeof e["error"]=="function"){e["error"](s)}}}})};var s=Ember.Application.create({rootElement:"#ember-root"});s.Router.map(function(){this.route("index",{path:"/:contest_code"});this.route("problems",{path:"/:contest_code/problems/:problem_code"})});s.Router.reopen({rootURL:"/",location:"history"});s.ApplicationController=Ember.Controller.extend({init:function(){this.set("loading",true)},dataObserver:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){Ember.$("#client-ip").text(e.ip);var t=moment(e.time.current*1e3).format("MMM DD, YYYY HH:mm:ss");formatTime(t);this.set("loading",false)}}.observes("originalData"),userImage:function(){var t=this.get("originalData");if(!Ember.isEmpty(t)){var s=this.get("originalData").user;if(s){e();return"<td><a href='/users/"+s.username+"'><div class='picture'>"+s.profileImage+"</div> </a></td>"}}return""}.property("originalData"),userProfileURL:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){var t=this.get("originalData").user.username;if(t){return'<a href="/users/'+t+'">Account</a>'}else{return""}}else{return""}}.property("originalData"),loginActionURL:function(){var e=this.get("originalData");var t=e.code;if(!Ember.isEmpty(t)){return"/node?destination="+t}else{return""}}.property("originalData")});s.ProblemsRoute=Ember.Route.extend({setupController:function(e,t){e.set("contest_code",t.contest_code);e.set("problem_code",t.problem_code);var i=s.get("originalData");if(Ember.isEmpty(i)){n(t,this,"problems")}else{e.set("originalData",i);e.set("loading",false)}}});s.ProblemsController=Ember.Controller.extend({loading:true,breadcrumbs:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){return'<a href="/">Home</a>&nbsp;»&nbsp;<a href="/contests/">Compete</a>'+'&nbsp;»&nbsp;<a href="/'+this.get("contest_code")+'">'+this.get("originalData").name+"</a>&nbsp;»&nbsp;"+e.problems[this.get("problem_code")].name}else{return""}}.property("originalData"),contestNameObserver:function(){this.observeContestName()}.observes("originalData"),observeContestName:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){document.title=e.problems[this.get("problem_code")].name+" | CodeChef";this.set("node",e.problems[this.get("problem_code")].node);this.set("isSubmitAllowed",e.problems[this.get("problem_code")].allow_submission);var t="/"+this.get("contest_code")+"/status/"+this.get("problem_code");this.set("mySubmissionsURL",t+","+e.user.username);this.set("allSubmissionsURL",t);var s="/users/";var i=this.get("node");this.set("problemAuthorURL",s+i.problem_author);if(!Ember.isEmpty(i.problem_tester)){this.set("problemTesterURL",s+this.get(i.problem_tester))}this.set("problemPageURL","http://www.codechef.com/"+this.get("contest_code")+"/problems/"+this.get("problem_code"));this.set("loading",false)}}});function i(e){var t=e+"=";var s=document.cookie.split(";");for(var i=0;i<s.length;i++){var r=s[i];while(r.charAt(0)==" ")r=r.substring(1);if(r.indexOf(t)==0)return r.substring(t.length,r.length)}return moment()}function r(e){g("Contest Not Found.");setTimeout(function(){window.location="/"},3e3)}function a(e){return i("uname")+"-"+e}s.IndexRoute=Ember.Route.extend({setupController:function(e,t){var s=t.contest_code;var i="/api/contests/"+s;e.set("ajaxUrl",i);n(t,this,"contest")}});var o=function(e,t,s){var i=s["partial_scores"][e["code"]];var r='<div data-tooltip="';var a=[];if(!Ember.isEmpty(i)){$.each(i,function(e,t){a.push("<span style=&quot;color:#EA2020;font-size:12px;&quot;>"+t["score"]+"</span><span style=&quot;font-size:12px;&quot;> ->"+t["count"]+"</span>")})}e["successful_submissions"]=parseInt(e["successful_submissions"]);r+=a.join(", ");r+='">';r+=e["successful_submissions"];r+="</div>";var o={solved:"green","partially-solved":"yellow",unsolved:"red",unattempted:""};e["meta"]={problem_code:e["code"],contest_code:t};e["score"]=r;e["problem_link"]="/"+t+"/problems/"+e["code"];e["submit_link"]="/"+t+"/submit/"+e["code"];e["status_link"]="/"+t+"/status/"+e["code"];e["status"]=Ember.isEmpty(s["problemsstats"]["partially_solved"][e["code"]])?Ember.isEmpty(s["problemsstats"]["solved"][e["code"]])?Ember.isEmpty(s["problemsstats"]["attempted"][e["code"]])?"unattempted":"unsolved":"solved":"partially-solved";e["mark"]=e["status"]!="unattempted"?"<img style='display:inline-block;   width: 15px; vertical-align: middle;' src = 'http://www.codechef.com/sites/all/modules/codechef_tags/images/"+e["status"]+".png' "+"title='"+e["status"]+"' />":"";e["color"]=o[e["status"]];var n='<div class="flexbox"><div class="todo-widget" style="visibility: hidden;"><input type="image" src="/sites/all/themes/abessive/images/add1.png" title="Add problem to Todo list" class="todo-button" width="25" height="25" problem="'+e["code"]+'" contest="'+t+'"><div class="todo-button-message"></div></div></div>';var l='<div class="flexbox"><div class="todo-widget" style="visibility: hidden;"><input type="image" src="/sites/all/themes/abessive/images/add2.png" title="Problem already present in Todo list" class="todo-button" width="25" height="25"><div class="todo-button-message"></div></div></div>';e["todo_widget"]=e["status"]!="solved"&&Ember.isEmpty(s.todos[e["code"]])?n:l;return e};s.error=false;var n=function(e,i,n){var l=i.controllerFor("application");var c=i.controllerFor("index");var d=i.controllerFor("problems");c.set("loading",true);var m=e.contest_code;var u="/api/contests/"+m;var f=window.sessionStorage;c.set("contest_code",m);if(typeof c.get("sortBy")==="function"){c.set("sortBy","successful_submissions");c.set("order","desc")}var p=function(e,t){if(e.status=="success"){if(t===undefined){f.clear()}if(Ember.isEmpty(e.code)){r();return}var u=$.map(e.problems,function(t,s){t=o(t,m,e);return[t]});c.set("model",u);var p=parseInt(moment()/1e3);var v=moment(e.time.current);e.time.offset=p-v;e.time.generated=p;s.set("oldData",s.get("originalData"));s.set("originalData",e);if(n=="problems"){d.set("oldData",d.get("originalData"));d.set("originalData",e)}else{c.set("oldData",c.get("originalData"));c.set("originalData",e)}l.set("originalData",e);var b=!Ember.isEmpty(e.user.username)?e.user.username:"anon";if(t===undefined){var h=new Date;h.setTime(h.getTime()+100*1e3);$.cookie("uname",b,{expires:h});var y={data:e,generated:parseInt(moment()/1e3)};var E=a(m);f.setItem(E,JSON.stringify(y))}s.set("error",false);c.set("loading",false)}else{g(e.message+". Please Reload.")}i.set("loading",false)};var v=function(){var e=s.get("error");if(!e){s.set("error",true);g("Some Error Occurred. Please Reload.")}i.set("loading",false)};var b=parseInt(moment()/1e3);var y=a(m);var E=f.getItem(y);if(!navigator.onLine){h()}if(Ember.isEmpty(E)){t({url:u,success:p,error:v})}else{E=JSON.parse(f.getItem(y));if(b-E.generated>=60||E.generated<=E.data.time.start||Ember.isEmpty(E.data.problems)){t({url:u,success:p,error:v})}else{E.data.time.current=parseInt(moment()/1e3)-E.data.time.offset;p(E.data,true)}}};var l=Ember.Mixin.create({loading:true,searchable:false,filterable:false,sortable:false,queryParamsEnabled:false});s.IndexController=Ember.ArrayController.extend(Ember.DataTableMixin,{init:function(){this._super();this.setTableEmptyMessage('<div>Please click <a id="reload">here</a> to reload. If problem persists, please report to bugs@codechef.com</div>'),this.timeObserver();var e=this;Ember.run.scheduleOnce("afterRender",this,function(){Ember.run.later(this,function(){var t=$("#rules").find(".dataTable").find("tbody").find("div")[0];var s=$("#announcements").find(".dataTable").find("tbody").find("div")[0];function i(e){if(!Ember.isEmpty(e)){e.removeAttribute("style");if(e.childNodes.length>0){for(var t in e.childNodes){if(e.childNodes[t].nodeType==1)i(e.childNodes[t])}}}}i(t);i(s);e.setReloadButton()},2e3)})},refreshTime:y(90,150),recentActivityOpen:false,isContestRunning:true,recentActivityInit:false,isContestReminderAvailable:false,properties:["name","code","successful_submissions","accuracy","allow_submission","type","todo_widget"],didContestStartObserver:function(){var e=this;if(this.get("didContestStart")){var t=function(){setTimeout(function(){window.sessionStorage.clear();e.setTableEmptyMessage(null);e.refreshContestData();$("#small-box_wrapper").remove();$("#small-box_background").remove()},y(3,10)*1e3)};p("<span>Contest has started, updating page </span><img style='padding: 2px; vertical-align: middle;' src='/misc/loader-icon.gif'/>",t)}}.observes("didContestStart"),setReloadButton:function(){var e=this;var t=function(){e.refreshContestData()};$("#reload").unbind("click");$("#reload").bind("click",t)},setTableEmptyMessage:function(e){if(!Ember.isEmpty(e)){this.set("tableEmptyMessage",'<tr><td style="text-align: center; padding: 15px" colspan="4">'+e+"</td></tr>")}else{this.set("tableEmptyMessage",null)}},refreshContestData:function(){if(navigator.onLine){n({contest_code:this.get("contest_code")},this,"contest")}},refreshTimeObserver:function(){var e=this.get("refreshTime");var t=this.get("isContestRunning");if(e>0&&t){this.set("refreshTimeMessage","The information will be updated in "+e+" seconds")}else if(e<=0&&t){this.set("refreshTimeMessage",null);this.set("refreshTime",y(90,150));this.refreshContestData()}else{this.set("refreshTimeMessage",null)}}.observes("refreshTime"),isContestEndedObserver:function(){var e=this.get("isContestEnded");if(e){var s=function(e){if(e.status=="success"){setTimeout(function(){d(e.contests)},2e3)}else{}};t({url:"/api/runningUpcomingContests/data",success:s})}}.observes("isContestEnded"),timeObserver:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){if(!navigator.onLine){h()}var t=e.time;var s=parseInt(moment()/1e3);var i=t.offset;var r=t.end+i;var a=t.start+i;this.set("isContestReminderAvailable",a-s>4200&&e.user.username);var o=function(e){t=[];var s=parseInt(e.asDays());t.push(s?s+" days":"");var i=e.hours();t.push(i?i+" hrs":"");var r=e.minutes();t.push(r?r+" mins":"");var a=e.seconds();t.push(a?a+" sec":"");return t.join(" ")};var n="";var l="";if(r-s<0){this.set("timeElapsed","<p>Contest Ended.</p>");this.set("isContestEnded",true);this.setTableEmptyMessage('<div >Please click <a id="reload">here</a> to reload. If problem persists, please report to bugs@codechef.com</div>');this.set("isContestRunning",false)}else if(r-s>0&&s-a>0){var c=this.get("isContestRunning");if(!c){this.set("didContestStart",true);this.setTableEmptyMessage("Loading problems for the contest. Please wait.")}this.set("refreshTime",this.get("refreshTime")-1);this.set("isContestRunning",true);l=moment.duration((r-s)*1e3);n=o(l);this.setReloadButton();this.set("timeElapsed","<p>Contest Ends In:</p><br/>"+n)}else if(r-s>0&&a-s>0){this.set("isContestRunning",false);l=moment.duration((a-s)*1e3);n=o(l);this.setTableEmptyMessage("Problems will be available in "+n);this.set("timeElapsed","<p>Contest Starts In:</p><br/>"+n)}}Em.run.later(this,this.timeObserver,1e3)},contestNameObserver:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){document.title=e.name+" | CodeChef";Drupal.settings.username=e.user.username;this.set("announcements",Ember.ArrayController.createWithMixins(Ember.DataTableMixin,l,{rowTemplate:"singleRow",model:[{data:e.announcements}],headerAlias:Ember.Object.create({data:"Announcements"}),loading:false,pagination:false}));this.set("rules",Ember.ArrayController.createWithMixins(Ember.DataTableMixin,l,{rowTemplate:"singleRow2",model:[{data2:e.rules}],headerAlias:Ember.Object.create({data2:"Rules"}),loading:false,pagination:false}));this.set("stats",Ember.ArrayController.createWithMixins(Ember.DataTableMixin,l,{rowTemplate:"singleRow3",model:[{data3:e.stats}],headerAlias:Ember.Object.create({data3:"Stats"}),loading:false,pagination:false}));this.set("loading",false);var t=this.get("oldData");if(!Ember.isEmpty(t)){if(t.announcements!=e.announcements){m("<span>There has been a new announcement. Please check.</span>")}}}}.observes("originalData"),isContestReminderAvailableObserver:function(){if(this.get("isContestReminderAvailable")){Drupal.settings.formHTML='<div id="cc-notification-viewport"><div style="margin: auto; width: 325px;padding: 15px;"><div cc-forms="form-description" class="ccl-font-h2 ccl-border-bottom ccl-padding-s ccl-margin-m  ccl-align-c">Set Contest Reminder</div><div class="ccl-su-disable" cc-forms="form-overlay"></div><div cc-forms="form"></div></div></div>'}}.observes("isContestReminderAvailable"),recentActivityInitObserver:function(){var e=this.get("recentActivityInit");var s=this;if(e){var i=Ember.ArrayController.createWithMixins(Ember.DataTableMixin,{loading:true,tableEmptyMessage:'<tr><td style="text-align: center;" colspan="5">No Recent Activity</td></tr>',init:function(){this.queryStringObserver()},ajaxUrl:"/api/recentactivity/"+s.get("contest_code")+"?",cacheMap:Ember.Map.create(),page:1,itemsPerPage:10,maxDisp:1,properties:["submission_date","handle","code","result_code","language"],headerAlias:Ember.Object.create({submission_date:"Date",code:"Problem",language:"Lang",result_code:"Result",handle:"User"}),setRequiredProperties:function(e){var t=this;try{t.set("availablePages",e.availablePages);t.set("totalItems",e.totalItems);t.set("generated",e.generated)}catch(s){console.log(s)}},queryStringObserver:function(){var e=this;e.set("loading",true);var i=e.get("cacheMap");var r=e.get("queryString");var a=Em.A();if(!i.has(r)||(Date.now()-i.get(r).generated)/1e3>=60){var o=function(t){try{if(t.status=="success"){t.generated=Date.now();e.setRequiredProperties(t);t.list.forEach(function(e){e["result_code"]="<img src='/misc/"+e["result_code"]+"'/>";e["submission_date"]=e["submission_date"];e["code"]="<a title='"+e["code"]+"' href='/"+s.get("contest_code")+"/problems/"+e["code"]+"'>"+e["code"]+"</a>";e["handle"]="<a title='"+e["handle"]+"' href='/users/"+e["handle"]+"'>"+e["handle"]+"</a>";a.addObject(e)});t.list=a;e.set("list",t.list);i.set(r,t);e.set("loading",false)}else{g(t.message+". Please Reload.")}}catch(o){console.log(o.stack)}};var n=function(){g("Some error occured. Please Reload.")};var l={url:this.get("ajaxUrl")+r,success:o,error:n};t(l)}else{var c=i.get(r);e.setRequiredProperties(c);e.set("list",c.list);e.set("loading",false)}}.observes("queryStringChanged"),queryString:function(){var e=this;var t="page="+e.get("page");if(this.get("queryStringChanged")!=t){this.set("queryStringChanged",t)}return t}.property("page"),isAjaxified:true,searchable:false,filterable:false,sortable:false,rowTemplate:"recentActivityRow",queryParamsEnabled:false,actions:{nextPage:function(){if(this.get("page")>=this.get("availablePages")){return null}this.set("page",this.get("page")+1);this.get("queryString")},previousPage:function(){if(this.get("page")<=1){return null}this.set("page",this.get("page")-1);this.get("queryString")},pageByNum:function(e){this.set("page",e);this.get("queryString")}}});this.set("recentActivityController",i)}}.observes("recentActivityInit"),recentActivityOpenObserver:function(){var e=this.get("recentActivityOpen");var t=this.get("recentActivityInit");if(e){if(!t){this.set("recentActivityInit",true)}}}.observes("recentActivityOpen"),teamsListURL:function(){var e=this.get("contest_code");if(!Ember.isEmpty(e)){return"/teams/list/"+e}else{return""}}.property("contest_code"),rankingsURL:function(){var e=this.get("contest_code");if(!Ember.isEmpty(e)){return"/rankings/"+e}else{return"/rankings"}}.property("contest_code"),contestURL:function(){var e=this.get("contest_code");var t="http://www.codechef.com/";if(!Ember.isEmpty(e)){return t+e}return t}.property("contest_code"),breadcrumbs:function(){var e=this.get("originalData");if(!Ember.isEmpty(e)){return'<a href="/">Home</a>&nbsp;»&nbsp;<a href="/contests/">Compete</a>&nbsp;»&nbsp;'+this.get("originalData").name}else{return""}}.property("originalData"),queryParams:["sortBy","order"],hidden:["allow_submission","type","problem_link","submit_link","status_link","todo_widget"],headerAlias:Ember.Object.create({name:"Name",code:"Code",accuracy:"Accuracy",successful_submissions:"Successful Submissions"}),rowTemplate:"contestPageRow",queryParamsEnabled:true,pagination:false,searchable:false,filterable:false,itemsPerPage:1e5,actions:{toggleRecentActivity:function(){this.toggleProperty("recentActivityOpen")}}});function c(e,t){invokeGenericModal({id:t+"-modal",message:'<div class="ccl-font-h2 ccl-border-bottom ccl-padding-s ccl-margin-sm ccl-align-c">'+t+'</div><div class="ccl-font-p ccl-align-c ccl-margin-m">'+e+"</div>",closeCross:true,areAllAllowed:true})}function d(e){var t="<div style='padding: 1.5rem;'><div class='ccl-margin-auto'>"+"        <div class='ccl-align-c'>"+"            <div class='ccl-font-h2 ccl-margin-s ' style='font-size:7rem;'> ☹</div>"+"            <div class='ccl-font-h2 ccl-margin-s ccl-border-bottom ccl-padding-s'>This contest has ended</div>"+"            <div>"+"                <div class='ccl-font-p ccl-font-bold '>You can access the problems in the practice section <a href='/problems/easy'>here.</a>"+"                </div>"+"            </div>";if(!Ember.isEmpty(e)){t+="<div class='ccl-font-p '>OR</div>"+"<div class='  cl-margin-s'></div>"+"<div class='ccl-font-p  ccl-font-bold  ccl-margin-s'>You can join in our hot &amp; sizzling contests below:"+"</div>"+"<div class='ccl-clearfix ccl-margin-s ccl-mw-bar'>"+"<div class='ccl-float-left ccl-width-40 ccl-border-right-white'>Contest Name</div>"+"<div class='ccl-float-left ccl-width-35 ccl-border-right-white'> Date</div>"+"<div class='ccl-float-left ccl-width-25'> Duration</div>"+"</div>";for(var s=0;s<e.length;s++){var i=e[s];var r=i["code"];var a=i["name"];var o=moment(i["start_date"]*1e3).format("llll");var n=moment.duration((i["end_date"]-i["start_date"])*1e3).asHours();t+="<div style='padding:.5rem;' class='ccl-clearfix ccl-padding-m ccl-margin-s ccl-border-bottom  ccl-font-s'>"+"<div class='ccl-align-l ccl-float-left ccl-width-40 ccl-border-right'><a class='ccl-ellipsis' href='/"+r+"' title='"+a+"'>"+a+"</a></div>"+"<div class='ccl-float-left ccl-width-35 ccl-border-right'>"+o+" IST</div>"+"<div class='ccl-float-left ccl-width-25' title='$duration_title'>"+n+" hours</div>"+"</div>"}t+="<div class='ccl-align-l ccl-font-p ccl-font-bold'><a href='/contests'>more... </a></div>"}t+="        </div>"+"    </div>"+"</div>";invokeGenericModal({id:"contest-ended-popup",message:t,closeCross:true,areAllAllowed:true})}function m(e){c(e,"Info")}function u(e){c(e,"Success")}function f(e){c(e,"Warning")}function g(e){c(e,"Error")}function p(e,t,s){invokeGenericModal({id:"small-box",message:'<div class="ccl-font-p ccl-align-c ccl-margin-m">'+e+"</div>",closeCross:true,areAllAllowed:true,callback:t})}function v(e,t){p(e,t,"error")}function b(e,t){p(e,t,"success")}function h(){if(Ember.isEmpty($("#small-box"))){var e=function(){if(navigator.onLine){$("#small-box_wrapper").remove();$("#small-box_background").remove();b("You're connected now!");setTimeout(function(){$("#small-box_wrapper").remove();$("#small-box_background").remove()},2e3)}else{setTimeout(e,2e3)}};v("<span>You're offline. Trying to reconnect </span><img style='padding: 2px; vertical-align: middle;' src='/misc/loader-icon.gif'/>",e)}}function y(e,t){return Math.floor(Math.random()*(t-e+1))+e}})();